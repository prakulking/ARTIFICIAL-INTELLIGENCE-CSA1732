def dfs(graph, start, visited=None):
    if visited is None:
        visited = set()
        
    visited.add(start)
    traversal_order = [start]
    
    for neighbor in graph[start]:
        if neighbor not in visited:
            traversal_order.extend(dfs(graph, neighbor, visited))
    
    return traversal_order

# Example usage
if __name__ == '__main__':
    # Example graph represented as an adjacency list
    graph = {
        'A': ['B', 'C'],
        'B': ['A', 'D', 'E'],
        'C': ['A', 'F'],
        'D': ['B'],
        'E': ['B', 'F'],
        'F': ['C', 'E']
    }
    
    start_node = 'A'
    print(f"DFS traversal starting from node {start_node}:")
    print(dfs(graph, start_node))
